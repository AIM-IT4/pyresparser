{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Pyresparser \u00b6 A simple resume parser used for extracting information from resumes Features \u00b6 Extract name Extract email Extract mobile numbers Extract skills Extract total experience Extract college name Extract degree Extract designation Extract company names Getting Started \u00b6 Installation \u00b6 You can install this package using pip install pyresparser For NLP operations we use spacy and nltk. Install them using below commands: # spaCy python -m spacy download en_core_web_sm # nltk python -m nltk.downloader words Usage \u00b6 Import it in your Python project from pyresparser import ResumeParser data = ResumeParser('/path/to/resume/file').get_extracted_data() Result \u00b6 The module would return a list of dictionary objects with result as follows: [ { 'college_name': ['Marathwada Mitra Mandal\u2019s College of Engineering'], 'company_names': None, 'degree': ['B.E. IN COMPUTER ENGINEERING'], 'designation': ['Manager', 'TECHNICAL CONTENT WRITER', 'DATA ENGINEER'], 'email': 'omkarpathak27@gmail.com', 'mobile_number': '8087996634', 'name': 'Omkar Pathak', 'no_of_pages': 3, 'skills': ['Operating systems', 'Linux', 'Github', 'Testing', 'Content', 'Automation', 'Python', 'Css', 'Website', 'Django', 'Opencv', 'Programming', 'C', ...], 'total_experience': 1.83 } ] Supported Resume File Formats \u00b6 Parsing of PDF and DOCx files are supported on all Operating Systems If you want to parse DOC files you can install textract for your OS (Linux, MacOS) Note: You just have to install textract (and nothing else) and doc files will get parsed easily Advanced Options \u00b6 Explicitly specifying skills file \u00b6 Pyresparser comes with built-in skills file that defaults to many technical skills. You can find the default skills file here . For extracting data against your specified skills, create a CSV file with no headers. from pyresparser import ResumeParser data = ResumeParser('/path/to/resume/file', skills_file='/path/to/skills.csv').get_extracted_data() Explicitly providing regex to parse phone numbers \u00b6 While pyresparser parses most of the phone numbers correctly, there is a possibility of new patterns being added in near future. Hence, we can explicitly provide the regex required to parse the desired phone numbers. This can be done using from pyresparser import ResumeParser data = ResumeParser('/path/to/resume/file', custom_regex='pattern').get_extracted_data()","title":"Home"},{"location":"#pyresparser","text":"A simple resume parser used for extracting information from resumes","title":"Pyresparser"},{"location":"#features","text":"Extract name Extract email Extract mobile numbers Extract skills Extract total experience Extract college name Extract degree Extract designation Extract company names","title":"Features"},{"location":"#getting_started","text":"","title":"Getting Started"},{"location":"#installation","text":"You can install this package using pip install pyresparser For NLP operations we use spacy and nltk. Install them using below commands: # spaCy python -m spacy download en_core_web_sm # nltk python -m nltk.downloader words","title":"Installation"},{"location":"#usage","text":"Import it in your Python project from pyresparser import ResumeParser data = ResumeParser('/path/to/resume/file').get_extracted_data()","title":"Usage"},{"location":"#result","text":"The module would return a list of dictionary objects with result as follows: [ { 'college_name': ['Marathwada Mitra Mandal\u2019s College of Engineering'], 'company_names': None, 'degree': ['B.E. IN COMPUTER ENGINEERING'], 'designation': ['Manager', 'TECHNICAL CONTENT WRITER', 'DATA ENGINEER'], 'email': 'omkarpathak27@gmail.com', 'mobile_number': '8087996634', 'name': 'Omkar Pathak', 'no_of_pages': 3, 'skills': ['Operating systems', 'Linux', 'Github', 'Testing', 'Content', 'Automation', 'Python', 'Css', 'Website', 'Django', 'Opencv', 'Programming', 'C', ...], 'total_experience': 1.83 } ]","title":"Result"},{"location":"#supported_resume_file_formats","text":"Parsing of PDF and DOCx files are supported on all Operating Systems If you want to parse DOC files you can install textract for your OS (Linux, MacOS) Note: You just have to install textract (and nothing else) and doc files will get parsed easily","title":"Supported Resume File Formats"},{"location":"#advanced_options","text":"","title":"Advanced Options"},{"location":"#explicitly_specifying_skills_file","text":"Pyresparser comes with built-in skills file that defaults to many technical skills. You can find the default skills file here . For extracting data against your specified skills, create a CSV file with no headers. from pyresparser import ResumeParser data = ResumeParser('/path/to/resume/file', skills_file='/path/to/skills.csv').get_extracted_data()","title":"Explicitly specifying skills file"},{"location":"#explicitly_providing_regex_to_parse_phone_numbers","text":"While pyresparser parses most of the phone numbers correctly, there is a possibility of new patterns being added in near future. Hence, we can explicitly provide the regex required to parse the desired phone numbers. This can be done using from pyresparser import ResumeParser data = ResumeParser('/path/to/resume/file', custom_regex='pattern').get_extracted_data()","title":"Explicitly providing regex to parse phone numbers"},{"location":"cli/","text":"CLI \u00b6 pyresparser comes with a cli option which you can use right away in your terminal usage: pyresparser [-h] [-f FILE] [-d DIRECTORY] [-r REMOTEFILE] [-sf SKILLSFILE] optional arguments: -h, --help show this help message and exit -f FILE, --file FILE resume file to be extracted -d DIRECTORY, --directory DIRECTORY directory containing all the resumes to be extracted -r REMOTEFILE, --remotefile REMOTEFILE remote path for resume file to be extracted -sf SKILLSFILE, --skillsfile SKILLSFILE custom skills CSV file against which skills are searched for Parsing single resume \u00b6 For extracting data from a single resume file, use pyresparser -f /path/to/resume/file Parsing mutliple resumes \u00b6 For extracting data from several resumes, place them in a directory and then execute pyresparser -d /path/to/resume/directory/ Parsing hosted resumes \u00b6 For extracting data from remote resumes , execute pyresparser -r https://www.example.com/path/to/resume/file Specifying skills explicitly \u00b6 Pyresparser comes with built-in skills file that defaults to many technical skills. You can find the default skills file here . For extracting data against your specified skills, create a CSV file with no headers and execute pyresparser -sf /path/to/resume/file.csv -f /path/to/resume/file Specifying export format \u00b6 For specifying the export format you can use the following option: pyresparser -e json -f /path/to/resume/file Note: Currently only JSON export is supported","title":"CLI"},{"location":"cli/#cli","text":"pyresparser comes with a cli option which you can use right away in your terminal usage: pyresparser [-h] [-f FILE] [-d DIRECTORY] [-r REMOTEFILE] [-sf SKILLSFILE] optional arguments: -h, --help show this help message and exit -f FILE, --file FILE resume file to be extracted -d DIRECTORY, --directory DIRECTORY directory containing all the resumes to be extracted -r REMOTEFILE, --remotefile REMOTEFILE remote path for resume file to be extracted -sf SKILLSFILE, --skillsfile SKILLSFILE custom skills CSV file against which skills are searched for","title":"CLI"},{"location":"cli/#parsing_single_resume","text":"For extracting data from a single resume file, use pyresparser -f /path/to/resume/file","title":"Parsing single resume"},{"location":"cli/#parsing_mutliple_resumes","text":"For extracting data from several resumes, place them in a directory and then execute pyresparser -d /path/to/resume/directory/","title":"Parsing mutliple resumes"},{"location":"cli/#parsing_hosted_resumes","text":"For extracting data from remote resumes , execute pyresparser -r https://www.example.com/path/to/resume/file","title":"Parsing hosted resumes"},{"location":"cli/#specifying_skills_explicitly","text":"Pyresparser comes with built-in skills file that defaults to many technical skills. You can find the default skills file here . For extracting data against your specified skills, create a CSV file with no headers and execute pyresparser -sf /path/to/resume/file.csv -f /path/to/resume/file","title":"Specifying skills explicitly"},{"location":"cli/#specifying_export_format","text":"For specifying the export format you can use the following option: pyresparser -e json -f /path/to/resume/file Note: Currently only JSON export is supported","title":"Specifying export format"}]}